<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mortgage Calculator</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Body Styling */
        body {
            background: linear-gradient(120deg, #f0f2f5, #dfe7ed);
            font-family: 'Poppins', sans-serif;
            color: #333;
            padding: 20px;
        }

        /* Container && Card */
        .container {
            max-width: 1200px;
            margin: auto;
            background: #fff;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            padding: 20px;
            overflow: hidden;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .header input {
            max-width: 200px;
            border-radius: 5px;
            border: 1px solid #ddd;
            padding: 8px;
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            margin-bottom: 20px;
        }

        .grid-item {
            background-color: #f7f9fc;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 10px;
            text-align: center;
        }

        .grid-item input {
            width: 100%;
            border: none;
            background-color: #ffffff;
            padding: 8px;
            border-radius: 5px;
            text-align: center;
            font-weight: bold;
        }

        .payment-result {
            background-color: #e0f7ff;
            padding: 15px;
            text-align: center;
            border-radius: 5px;
            font-weight: bold;
            color: #007bff;
            font-size: 20px;
        }

        @media (max-width: 768px) {
            .grid-container {
                grid-template-columns: 1fr;
            }
        }

    </style>
</head>
<body>

    <div class="container">
        <div class="header">
            <span>Start here âž”</span>
            <input type="number" placeholder="Price" id="price" name="price" value="500000" oninput="updateDownPayments()">
            <input type="text" placeholder="Location" value="Toronto, ON" disabled>
        </div>

        <div class="grid-container">
            <div class="grid-item">
                <div class="grid-item-header">Down payment 1 (%)</div>
                <input type="number" step="0.01" id="down_payment1" name="down_payment1" value="20" oninput="updateDownPaymentValues(1)">
                <div id="down_payment_value1"></div>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Down payment 2 (%)</div>
                <input type="number" step="0.01" id="down_payment2" name="down_payment2" value="30" oninput="updateDownPaymentValues(2)">
                <div id="down_payment_value2"></div>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Down payment 3 (%)</div>
                <input type="number" step="0.01" id="down_payment3" name="down_payment3" value="40" oninput="updateDownPaymentValues(3)">
                <div id="down_payment_value3"></div>
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-item">
                <div class="grid-item-header">CMHC insurance 1</div>
                <div id="result-cmhc1">$0.00</div>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">CMHC insurance 2</div>
                <div id="result-cmhc2">$0.00</div>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">CMHC insurance 3</div>
                <div id="result-cmhc3">$0.00</div>
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-item">
                <div class="grid-item-header">Total mortgage 1</div>
                <div id="result-total-mortgage1">$0.00</div>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Total mortgage 2</div>
                <div id="result-total-mortgage2">$0.00</div>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Total mortgage 3</div>
                <div id="result-total-mortgage3">$0.00</div>
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-item">
                <div class="grid-item-header">Amortization 1 (Years)</div>
                <input type="number" id="amortization1" name="amortization1" value="25" oninput="calculateMortgage(1)">
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Amortization 2 (Years)</div>
                <input type="number" id="amortization2" name="amortization2" value="25" oninput="calculateMortgage(2)">
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Amortization 3 (Years)</div>
                <input type="number" id="amortization3" name="amortization3" value="25" oninput="calculateMortgage(3)">
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-item">
                <div class="grid-item-header">Mortgage rate 1 (%)</div>
                <input type="number" step="0.01" id="mortgage_rate1" name="mortgage_rate1" value="4.29" oninput="calculateMortgage(1)">
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Mortgage rate 2 (%)</div>
                <input type="number" step="0.01" id="mortgage_rate2" name="mortgage_rate2" value="4.29" oninput="calculateMortgage(2)">
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Mortgage rate 3 (%)</div>
                <input type="number" step="0.01" id="mortgage_rate3" name="mortgage_rate3" value="4.29" oninput="calculateMortgage(3)">
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-item">
                <div class="grid-item-header">Payment frequency 1</div>
                <select id="payment_frequency1" name="payment_frequency1" onchange="calculateMortgage(1)">
                    <option value="Monthly">Monthly</option>
                    <option value="Bi-weekly">Bi-weekly</option>
                    <option value="Weekly">Weekly</option>
                </select>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Payment frequency 2</div>
                <select id="payment_frequency2" name="payment_frequency2" onchange="calculateMortgage(2)">
                    <option value="Monthly">Monthly</option>
                    <option value="Bi-weekly">Bi-weekly</option>
                    <option value="Weekly">Weekly</option>
                </select>
            </div>
            <div class="grid-item">
                <div class="grid-item-header">Payment frequency 3</div>
                <select id="payment_frequency3" name="payment_frequency3" onchange="calculateMortgage(3)">
                    <option value="Monthly">Monthly</option>
                    <option value="Bi-weekly">Bi-weekly</option>
                    <option value="Weekly">Weekly</option>
                </select>
            </div>
        </div>

        <div class="grid-container">
            <div class="grid-item">
                <div class="payment-result" id="result-payment1">$0.00</div>
            </div>
            <div class="grid-item">
                <div class="payment-result" id="result-payment2">$0.00</div>
            </div>
            <div class="grid-item">
                <div class="payment-result" id="result-payment3">$0.00</div>
            </div>
        </div>

        <div class="error-message" id="error-message"></div>
    </div>

    <script>
        function updateDownPayments() {
            const price = parseFloat(document.getElementById('price').value);
            if (isNaN(price)) {
                clearResults();
                document.getElementById('error-message').innerText = 'Please enter a valid price.';
                return;
            }

            updateDownPaymentValues(1);
            updateDownPaymentValues(2);
            updateDownPaymentValues(3);
        }

        function updateDownPaymentValues(index) {
            const price = parseFloat(document.getElementById('price').value);
            const downPaymentPercentage = parseFloat(document.getElementById(`down_payment${index}`).value);
            if (isNaN(price) || isNaN(downPaymentPercentage)) {
                clearResult(index);
                document.getElementById('error-message').innerText = 'Please enter valid inputs for price and down payment percentage.';
                return;
            }

            const downPayment = (downPaymentPercentage / 100) * price;
            document.getElementById(`down_payment_value${index}`).innerText = `$${downPayment.toFixed(2)}`;

            calculateMortgage(index);  // Recalculate mortgage details for the specific index
        }

        function calculateMortgage(index) {
            const price = parseFloat(document.getElementById('price').value);
            const downPayment = parseFloat(document.getElementById(`down_payment_value${index}`).innerText.replace('$', '').replace(',', ''));
            const amortization = parseInt(document.getElementById(`amortization${index}`).value);
            const mortgageRate = parseFloat(document.getElementById(`mortgage_rate${index}`).value) / 100;
            const paymentFrequency = document.getElementById(`payment_frequency${index}`).value;

            if (!validateDownPayment(price, downPayment, index)) {
                clearResult(index);
                return;
            }

            const totalMortgage = price - downPayment;
            const cmhcInsurance = calculateCMHCInsurance(totalMortgage, price, downPayment);
            const insuredMortgage = totalMortgage + cmhcInsurance;

            const payment = calculatePayment(insuredMortgage, amortization, mortgageRate, paymentFrequency);

            document.getElementById(`result-cmhc${index}`).innerText = `$${cmhcInsurance.toFixed(2)}`;
            document.getElementById(`result-total-mortgage${index}`).innerText = `$${insuredMortgage.toFixed(2)}`;
            document.getElementById(`result-payment${index}`).innerText = `$${payment.toFixed(2)}`;
        }

        function validateDownPayment(price, downPayment, index) {
            let minimumDownPayment;
            if (price <= 500000) {
                minimumDownPayment = 0.05 * price;
            } else if (price > 500000 && price < 1000000) {
                minimumDownPayment = (0.05 * 500000) + (0.10 * (price - 500000));
            } else {
                minimumDownPayment = 0.20 * price;
            }

            if (downPayment < minimumDownPayment) {
                document.getElementById('error-message').innerText = `The minimum down payment for a property of $${price.toFixed(2)} is ${(minimumDownPayment / price * 100).toFixed(2)}%. Please increase your down payment.`;
                return false;
            }

            document.getElementById('error-message').innerText = '';  // Clear error message if inputs are valid
            return true;
        }

        function calculateCMHCInsurance(totalMortgage, price, downPayment) {
            const downPaymentPercentage = (downPayment / price) * 100;
            let insuranceRate = 0;

            if (downPaymentPercentage < 5) {
                throw new Error("Minimum down payment is 5%");
            } else if (downPaymentPercentage >= 5 && downPaymentPercentage < 10) {
                insuranceRate = 4.00;
            } else if (downPaymentPercentage >= 10 && downPaymentPercentage < 15) {
                insuranceRate = 3.10;
            } else if (downPaymentPercentage >= 15 && downPaymentPercentage < 20) {
                insuranceRate = 2.80;
            } else {
                return 0;
            }

            return (insuranceRate / 100) * totalMortgage;
        }

        function calculatePayment(insuredMortgage, amortization, mortgageRate, paymentFrequency) {
            let numPayments;
            let paymentRate;

            switch(paymentFrequency) {
                case "Bi-weekly":
                    numPayments = amortization * 26;
                    paymentRate = mortgageRate / 26;
                    break;
                case "Weekly":
                    numPayments = amortization * 52;
                    paymentRate = mortgageRate / 52;
                    break;
                default:
                    numPayments = amortization * 12;
                    paymentRate = mortgageRate / 12;
            }

            return (insuredMortgage * paymentRate * Math.pow(1 + paymentRate, numPayments)) /
                   (Math.pow(1 + paymentRate, numPayments) - 1);
        }

        function clearResults() {
            for (let i = 1; i <= 3; i++) {
                clearResult(i);
            }
        }

        function clearResult(index) {
            document.getElementById(`result-cmhc${index}`).innerText = '$0.00';
            document.getElementById(`result-total-mortgage${index}`).innerText = '$0.00';
            document.getElementById(`result-payment${index}`).innerText = '$0.00';
        }

    </script>

</body>
</html>
